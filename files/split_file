#on a file with a sorted column, generates separate files: one file for each unique value in the sorted
#column, with all rows bearing that unique value. Header of source file is given to all new files.

#useage: bash split_file filename column_to_sort what_to_name_new_files

column=$2										#sets input column_to_sort value as the variable "column" 
	
for file in $1										#sets input filename as the variable "file"
do
	awk 'FNR > 1 {print $'$column'}' $file | uniq > temp.txt			#skip the first line of the file, pick the "columnth" column, and find and save its unique values as a temp file

	while read line_temp; do							#go line by line through temp file

		head -n1 $file > "$line_temp"_"$3".txt					#take header of source file and output it to a new file named "'current line of temp file'_'input what_to_name_new_files'"
		
		while read line_file; do						#go line by line through file

			awk -v var=$line_temp '$'$column' == var\
                        && $3 != "multiple"' >> "$line_temp"_"$3".txt          		#set current line of temp file as variable, then for every field in the "columnth" column that matches the current line of temp file
											#and whose third field is not equal to "multiple", append whole line to the new file

		done <$file

	done <temp.txt

rm temp.txt										#remove temp file to keep things clean

done
